       PROCESS DLL,NODYNAM,TEST(NOSEP),NOCICS,PGMN(LU)
      *+---------------------------------------------------------------+
      *| DFHEI1                                                        |
      *|     THIS IS STUB PROGRAM GENERATED BY THE IBM Z/OS AUTOMATED  |
      *|     UNIT TESTING FRAMEWORK (ZUNIT)                            |
      *|     FOR DFHEI1 CALL OF CICS COMMAND                           |
      *| DATE GENERATED: 12/26/2023 05:01                              |
      *+---------------------------------------------------------------+
       IDENTIFICATION DIVISION.
       PROGRAM-ID. DFHEI1.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       1 FAIL-MESSAGE-TXT PIC X(254) VALUE "HELLO FROM DFHEI1".
       1 FAIL-MESSAGE-LEN PIC S9(9) COMP-5 VALUE 19.
       1 AZ-TEST-NAME-FOR-SUB   PIC X(254) EXTERNAL.
       1 AZ-TEST-NAME-LEN  PIC S9(9) COMP-5 EXTERNAL.
       1 AZ-TEST-CASE-PTR  POINTER EXTERNAL.
       1 AZ-RECORD.
         3 AZ-RECORD-COUNT OCCURS 1 PIC 9(5) COMP-5 VALUE 0.
       1 AZ-LAST-TEST-NAME   PIC X(254) VALUE SPACES.
       1 AZ-LAST-TEST-NAME-LEN  PIC S9(9) COMP-5 VALUE 0.
       1 AZ-OPT-MASK-DATA2  PIC X(2).
       1 AZ-OPT-MASK-DATA9  PIC X(9).
       1 AZ-OPT-MASK-DATA11 PIC X(11).
       1 AZ-OPT-MASK-DATA19 PIC X(19).
       1 AZ-OPT-BYTECOUNT   PIC S9(8) COMP.
       1 AZ-OPT-RC          PIC 9(1) VALUE 0.
       1 AZ-OPT-COMMASK.
         3  AZ-OPT-COMMASK-DATA2  PIC X(2) OCCURS 1.
         3  AZ-OPT-COMMASK-DATA9  PIC X(9) OCCURS 1.
         3  AZ-OPT-COMMASK-DATA11 PIC X(11) OCCURS 1.
         3  AZ-OPT-COMMASK-DATA19 PIC X(19) OCCURS 1.
       1 AZ-LINE-BYTE       PIC S9(2) COMP.
       1 AZ-LINE-NUM        PIC 9(5).
       1 AZ-LINE-NUM-R   REDEFINES AZ-LINE-NUM.
         3 AZ-LINE-NUM-RD   PIC 9(1) OCCURS 5.
       1 AZ-LINE-I          PIC S9(8) COMP.
       1 AZ-LINE-J          PIC S9(8) COMP.
       1 AZ-COMPARE EXTERNAL.
         3 AZ-COMPARE-ITEM-NAME-PTR POINTER.
         3 AZ-COMPARE-ITEM-NAME-LEN PIC S9(9) COMP-5.
         3 AZ-COMPARE-ITEM-VALUE-PTR POINTER.
         3 AZ-COMPARE-ITEM-VALUE-LEN PIC S9(9) COMP-5.
         3 AZ-COMPARE-ITEM-EXP-VALUE-PTR POINTER.
         3 AZ-COMPARE-ITEM-EXP-VALUE-LEN PIC S9(9) COMP-5.
       1 AZ-TEST-EXPECTED-DATA-VALUE.
          3 ZUT00000000.
            5 PIC X(6) DISPLAY VALUE 'OLIVIA'.
            5 PIC X(44) DISPLAY VALUE SPACES.
          3 ZUT00000001.
            5 PIC X(10) DISPLAY VALUE '2023-03-08'.
          3 ZUT00000002.
            5 PIC X(8) DISPLAY VALUE '23.09.41'.
          3 ZUT00000003.
            5 PIC X(10) VALUE X'D6D3C9E5C9C140C9E240'.
            5 PIC X(10) VALUE X'C1D3D9C5C1C4E840D9C5'.
            5 PIC X(10) VALUE X'C7C9E2E3C5D9C5C40000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
          3 ZUT00000004.
            5 PIC X(8) DISPLAY VALUE '23.31.36'.
          3 ZUT00000005.
            5 PIC X(10) DISPLAY VALUE '2023-03-09'.
          3 ZUT00000006.
            5 PIC X(8) DISPLAY VALUE '02.59.02'.
          3 ZUT00000007.
            5 PIC X(8) DISPLAY VALUE '10.04.48'.
          3 ZUT00000008.
            5 PIC X(10) DISPLAY VALUE '2023-12-26'.
          3 ZUT00000009.
            5 PIC X(8) DISPLAY VALUE '04.59.24'.
          3 ZUT0000000A.
            5 PIC X(10) VALUE X'D6D3C9E5C9C140E8D6E4'.
            5 PIC X(10) VALUE X'40C1D9C540C1D3D9C5C1'.
            5 PIC X(10) VALUE X'C4E840D9C5C7C9E2E3C5'.
            5 PIC X(10) VALUE X'D9C5C440404040000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
            5 PIC X(10) VALUE X'00000000000000000000'.
       1 DFHEIBLK IS EXTERNAL.
         2 EIBTIME PICTURE S9(7) USAGE COMPUTATIONAL-3.
         2 EIBDATE PICTURE S9(7) USAGE COMPUTATIONAL-3.
         2 EIBTRNID PICTURE X(4).
         2 EIBTASKN PICTURE S9(7) USAGE COMPUTATIONAL-3.
         2 EIBTRMID PICTURE X(4).
         2 DFHEIGDI PICTURE S9(4) USAGE COMPUTATIONAL-5.
         2 EIBCPOSN PICTURE S9(4) USAGE COMPUTATIONAL-5.
         2 EIBCALEN PICTURE S9(4) USAGE COMPUTATIONAL-5.
         2 EIBAID PICTURE X(1).
         2 EIBFN PICTURE X(2).
         2 EIBRCODE PICTURE X(6).
         2 EIBDS PICTURE X(8).
         2 EIBREQID PICTURE X(8).
         2 EIBRSRCE PICTURE X(8).
         2 EIBSYNC PICTURE X.
         2 EIBFREE PICTURE X.
         2 EIBRECV PICTURE X.
         2 EIBSEND PICTURE X.
         2 EIBATT PICTURE X.
         2 EIBEOC PICTURE X.
         2 EIBFMH PICTURE X.
         2 EIBCOMPL PICTURE X(1).
         2 EIBSIG PICTURE X(1).
         2 EIBCONF PICTURE X(1).
         2 EIBERR PICTURE X(1).
         2 EIBERRCD PICTURE X(4).
         2 EIBSYNRB PICTURE X.
         2 EIBNODAT PICTURE X.
         2 EIBRESP PICTURE S9(8) USAGE COMPUTATIONAL.
         2 EIBRESP2 PICTURE S9(8) USAGE COMPUTATIONAL.
         2 EIBRLDBK PICTURE X(1).
       1 DFHCOMMAREA IS EXTERNAL.
         2 CSRGREQ.
         3 CSRGREQ.
         5 ACCOUNT-NO PIC S9(18).
         2 CSRGRES REDEFINES CSRGREQ.
         3 CSRGRES.
         5 CUSTOMER-NAME PIC X(50).
         5 CUSTOMER-ID PIC S9(9).
         5 SYS-DATE PIC X(10).
         5 SYS-TIME PIC X(08).
         5 MESSAGES PIC X(100).
          5 MESSAGES-AZ REDEFINES MESSAGES.
          6 PIC X(100) DISPLAY.
       LOCAL-STORAGE SECTION.
       1 AZ-COMPARE-ITEM-NAMES.
         3 ZUT0000000B.
            5 PIC X(20) DISPLAY VALUE 'CUSTOMER-NAME OF CSR'.
            5 PIC X(20) DISPLAY VALUE 'GRES OF CSRGRES OF D'.
            5 PIC X(10) DISPLAY VALUE 'FHCOMMAREA'.
         3 ZUT0000000D.
            5 PIC X(20) DISPLAY VALUE 'CUSTOMER-ID OF CSRGR'.
            5 PIC X(20) DISPLAY VALUE 'ES OF CSRGRES OF DFH'.
            5 PIC X(8) DISPLAY VALUE 'COMMAREA'.
         3 ZUT0000000F.
            5 PIC X(20) DISPLAY VALUE 'SYS-DATE OF CSRGRES '.
            5 PIC X(20) DISPLAY VALUE 'OF CSRGRES OF DFHCOM'.
            5 PIC X(5) DISPLAY VALUE 'MAREA'.
         3 ZUT00000011.
            5 PIC X(20) DISPLAY VALUE 'SYS-TIME OF CSRGRES '.
            5 PIC X(20) DISPLAY VALUE 'OF CSRGRES OF DFHCOM'.
            5 PIC X(5) DISPLAY VALUE 'MAREA'.
         3 ZUT00000013.
            5 PIC X(20) DISPLAY VALUE 'MESSAGES OF CSRGRES '.
            5 PIC X(20) DISPLAY VALUE 'OF CSRGRES OF DFHCOM'.
            5 PIC X(5) DISPLAY VALUE 'MAREA'.
       1 AZ-COMPARE-WORK-ITEMS.
          3 ZUT0000000C PIC X(50) OCCURS 2.
          3 ZUT0000000E PIC -9(9) OCCURS 2.
          3 ZUT00000010 PIC X(10) OCCURS 2.
          3 ZUT00000012 PIC X(8) OCCURS 2.
          3 ZUT00000014 PIC X(200) OCCURS 2.
       1 AZ-CONVERT.
         3 AZ-CONVERT-HEXIN  PIC X(1).
         3 AZ-CONVERT-HEXVAL PIC X(2).
         3 AZ-HEXSTR PIC X(16) VALUE "0123456789ABCDEF".
         3 AZ-DEC  PIC S9(4) COMP VALUE 0.
         3 FILLER REDEFINES AZ-DEC.
           5 FILLER PIC X.
           5 AZ-DECBYTE PIC X.
         3 AZ-I PIC S9(8) COMP.
         3 AZ-J PIC S9(8) COMP.
         3 AZ-Q PIC S9(8) COMP.
         3 AZ-R PIC S9(8) COMP.
         3 AZ-Q1 PIC S9(8) COMP.
         3 AZ-R1 PIC S9(8) COMP.
       LINKAGE SECTION.
       01 ARG0.
         03 ARG0-1        PIC X(2).
         03 ARG0-A        PIC X(28).
         03 ARG0-B REDEFINES ARG0-A.
           05 ARG0-2      PIC X(9).
           05 FILLER      PIC X(19).
         03 ARG0-C REDEFINES ARG0-A.
           05 FILLER      PIC X(6).
           05 ARG0-D.
             07 ARG0-3    PIC 9(1) OCCURS 22.
       01 ARG1            POINTER.
       01 ARG2            POINTER.
       01 ARG3            POINTER.
       01 ARG4            POINTER.
       01 ARG5            POINTER.
       01 ARG6            POINTER.
       01 ARG7            POINTER.
       01 ARG8            POINTER.
       01 ARG9            POINTER.
       01 ARG10           POINTER.
       1 AZ-CICS-TARGET-NAME-DEF4 PIC X(4).
       1 AZ-CICS-TARGET-NAME-DEF7 PIC X(7).
       1 AZ-CICS-TARGET-NAME-DEF8 PIC X(8).
      *
       PROCEDURE DIVISION USING ARG0 ARG1 ARG2 ARG3 ARG4 ARG5 ARG6
           ARG7 ARG8 ARG9 ARG10.
      * OUTPUT-START-MESSAGE.
           DISPLAY 'DFHEI1 STARTED...'
           IF AZ-LAST-TEST-NAME-LEN = AZ-TEST-NAME-LEN AND
             AZ-LAST-TEST-NAME(1:AZ-TEST-NAME-LEN) =
              AZ-TEST-NAME-FOR-SUB(1:AZ-TEST-NAME-LEN)
              CONTINUE
           ELSE
             INITIALIZE AZ-RECORD
             MOVE AZ-TEST-NAME-FOR-SUB(1:AZ-TEST-NAME-LEN)
               TO AZ-LAST-TEST-NAME(1:AZ-TEST-NAME-LEN)
             MOVE AZ-TEST-NAME-LEN
               TO AZ-LAST-TEST-NAME-LEN
           END-IF
      * SET GROUP OPTION COMMON MASK IN CICS GROUP
           MOVE X'0000' TO AZ-OPT-COMMASK-DATA2(1).
      * EXEC CICS RETURN X'0000'
           IF ARG0-1 = X'0E08'
             MOVE X'0000' TO AZ-OPT-MASK-DATA2
             MOVE 2 TO AZ-OPT-BYTECOUNT
             CALL 'EVALOPT' USING AZ-OPT-MASK-DATA2
               AZ-OPT-COMMASK-DATA2(1) ARG0-2
               AZ-OPT-BYTECOUNT AZ-OPT-RC
             IF AZ-OPT-RC = 0 THEN
               MOVE 3 TO AZ-LINE-BYTE
               PERFORM GETLINENUM
               DISPLAY 'EXEC CICS RETURN X''0000'''
                ' L=' AZ-LINE-NUM
             CALL 'AZUASTPA' USING BY VALUE AZ-TEST-CASE-PTR
               PERFORM TEARDOWN
             END-IF
           END-IF.
       TEARDOWN.
           DISPLAY 'DFHEI1 SUCCESSFUL.'
           GOBACK.
       GETLINENUM.
           MOVE 1 TO AZ-LINE-J
           PERFORM VARYING AZ-LINE-I FROM AZ-LINE-BYTE BY 1
             UNTIL AZ-LINE-I > AZ-LINE-BYTE + 5
             MOVE ARG0-3(AZ-LINE-I) TO AZ-LINE-NUM-RD(AZ-LINE-J)
             ADD 1 TO AZ-LINE-J
           END-PERFORM
           EXIT.
       CONVERT.
           MOVE AZ-CONVERT-HEXIN TO AZ-DECBYTE
           DIVIDE AZ-DEC BY 16 GIVING AZ-Q REMAINDER AZ-R
           COMPUTE AZ-Q1 = AZ-Q + 1
           COMPUTE AZ-R1 = AZ-R + 1
           MOVE AZ-HEXSTR(AZ-Q1:1) TO AZ-CONVERT-HEXVAL(1:1)
           MOVE AZ-HEXSTR(AZ-R1:1) TO AZ-CONVERT-HEXVAL(2:1)
           EXIT.
       THROW-ASSERTION.
      *    THROW AN ASSERTION EXCEPTION (ENDS TEST)
           CALL 'AZUASTFC' USING BY VALUE AZ-TEST-CASE-PTR
                   BY REFERENCE FAIL-MESSAGE-TXT
                   BY VALUE FAIL-MESSAGE-LEN
                   BY VALUE AZ-COMPARE-ITEM-NAME-PTR
                   BY VALUE AZ-COMPARE-ITEM-NAME-LEN
                   BY VALUE AZ-COMPARE-ITEM-VALUE-PTR
                   BY VALUE AZ-COMPARE-ITEM-VALUE-LEN
                   BY VALUE AZ-COMPARE-ITEM-EXP-VALUE-PTR
                   BY VALUE AZ-COMPARE-ITEM-EXP-VALUE-LEN
           EXIT.
      *+---------------------------------------------------------------+
      *| EVALOPT                                                       |
      *|   FUNCTION TO EVALUATE THAT THE BIT OF OPTION DATA            |
      *|   (1) TAKE AND OF GROUP COMMON MASK AND OPTION IN ARG0        |
      *|   (2) CHECK IF THE GROUP MASK IS EQUAL TO (1)                 |
      *|       IF EQUAL,    RTN01 IS 0                                 |
      *|       IF NO EQUAL, RTN01 IS 1                                 |
      *+---------------------------------------------------------------+
       ID DIVISION.
       PROGRAM-ID. EVALOPT.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       01  OUT1-REC.
         05 OUT1-DATA                PIC X(1) OCCURS 8.
       01 OUT1-DATA-R REDEFINES OUT1-REC.
         05 OUT1-DATA-UP             PIC X(4).
         05 OUT1-DATA-DOWN           PIC X(4).
       01  OUT2-REC.
         05  OUT2-DATA               PIC X(1) OCCURS 8.
       01  OUT2-DATA-R REDEFINES OUT2-REC.
         05 OUT2-DATA-UP             PIC X(4).
         05 OUT2-DATA-DOWN           PIC X(4).
       01  WORK1-REC.
         05  WORK1-DATA              PIC X(1) OCCURS 8.
       01  WORK1-DATA-R REDEFINES WORK1-REC.
         05 WORK1-DATA-UP            PIC X(4).
         05 WORK1-DATA-DOWN          PIC X(4).
       01  WORK-AREA.
         05  WORK-HEX-UP             PIC 9(4)  COMP.
         05  WORK-HEX-DOWN           PIC 9(4)  COMP.
       01  HEX-CHG-BEF.
         05  HEX-CHANGE-LV           PIC X(1) VALUE LOW-VALUE.
         05  HEX-CHANGE-BEFORE       PIC X(1).
       01  HEX-CHG-AFT      REDEFINES  HEX-CHG-BEF.
         05  HEX-CHANGE-AFTER        PIC 9(4)  COMP.
       01  TBL-CHANGE-DATA.
          05  FILLER                 PIC  X(004) VALUE '0000'.
          05  FILLER                 PIC  X(001) VALUE '0'.
          05  FILLER                 PIC  X(004) VALUE '0001'.
          05  FILLER                 PIC  X(001) VALUE '1'.
          05  FILLER                 PIC  X(004) VALUE '0010'.
          05  FILLER                 PIC  X(001) VALUE '2'.
          05  FILLER                 PIC  X(004) VALUE '0011'.
          05  FILLER                 PIC  X(001) VALUE '3'.
          05  FILLER                 PIC  X(004) VALUE '0100'.
          05  FILLER                 PIC  X(001) VALUE '4'.
          05  FILLER                 PIC  X(004) VALUE '0101'.
          05  FILLER                 PIC  X(001) VALUE '5'.
          05  FILLER                 PIC  X(004) VALUE '0110'.
          05  FILLER                 PIC  X(001) VALUE '6'.
          05  FILLER                 PIC  X(004) VALUE '0111'.
          05  FILLER                 PIC  X(001) VALUE '7'.
          05  FILLER                 PIC  X(004) VALUE '1000'.
          05  FILLER                 PIC  X(001) VALUE '8'.
          05  FILLER                 PIC  X(004) VALUE '1001'.
          05  FILLER                 PIC  X(001) VALUE '9'.
          05  FILLER                 PIC  X(004) VALUE '1010'.
          05  FILLER                 PIC  X(001) VALUE 'A'.
          05  FILLER                 PIC  X(004) VALUE '1011'.
          05  FILLER                 PIC  X(001) VALUE 'B'.
          05  FILLER                 PIC  X(004) VALUE '1100'.
          05  FILLER                 PIC  X(001) VALUE 'C'.
          05  FILLER                 PIC  X(004) VALUE '1101'.
          05  FILLER                 PIC  X(001) VALUE 'D'.
          05  FILLER                 PIC  X(004) VALUE '1110'.
          05  FILLER                 PIC  X(001) VALUE 'E'.
          05  FILLER                 PIC  X(004) VALUE '1111'.
          05  FILLER                 PIC  X(001) VALUE 'F'.
          01  TBL-DATA REDEFINES TBL-CHANGE-DATA.
           05  TBL-CHG  OCCURS  16 TIMES.
             10  TBL-BIT-CHAR        PIC  X(004).
             10  TBL-HEX-CHAR        PIC  X(001).
       01 BIT-COUNT                  PIC 9(1).
       01 I                          PIC S9(8) COMP.
       LINKAGE SECTION.
       1 G-MASK.
         3 D-G-MASK                 PIC X(1) OCCURS 9.
       1 COM-MASK.
         3 D-COM-MASK               PIC X(1) OCCURS 9.
       1 O-ARG0.
         3 D-O-ARG0                 PIC X(1) OCCURS 10.
       1 BYTE-COUNT                 PIC S9(8) COMP.
       1 RTN01                      PIC 9(1).
       PROCEDURE DIVISION USING G-MASK COM-MASK O-ARG0 BYTE-COUNT
            RTN01.
            MOVE 0 TO RTN01
            PERFORM VARYING I FROM 1 BY 1 UNTIL I > BYTE-COUNT
              PERFORM ANDCOMMASK
              IF RTN01 = 1 THEN
                GOBACK
              END-IF
            END-PERFORM.
            EXIT PROGRAM.
       ANDCOMMASK.
      * CONVERT GROUP COMMON MASK TO BIT
            MOVE D-COM-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CONVERT OPTION IN ARG0 TO BIT
            MOVE D-O-ARG0(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT2-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT2-DATA-DOWN.
      * CREATE EVAL BIT FROM GROUP COMMON MASK BIT AND ARG0 BIT
            PERFORM VARYING BIT-COUNT FROM 1 BY 1 UNTIL BIT-COUNT > 8
              IF OUT1-DATA(BIT-COUNT) = '1' AND
                 OUT2-DATA(BIT-COUNT) = '1' THEN
                MOVE '1' TO WORK1-DATA(BIT-COUNT)
              ELSE
                MOVE '0' TO WORK1-DATA(BIT-COUNT)
              END-IF
            END-PERFORM.
      * CONVERT GROUP MASK TO BIT DATA
            MOVE D-G-MASK(I) TO HEX-CHANGE-BEFORE.
            DIVIDE 16 INTO HEX-CHANGE-AFTER GIVING WORK-HEX-UP
                                         REMAINDER WORK-HEX-DOWN.
            MOVE TBL-BIT-CHAR(WORK-HEX-UP + 1)   TO OUT1-DATA-UP.
            MOVE TBL-BIT-CHAR(WORK-HEX-DOWN + 1) TO OUT1-DATA-DOWN.
      * CHECK IF EQUAL BETWEEN EVAL BIT AND GROUP MASK BIT
            IF WORK1-DATA-UP = OUT1-DATA-UP AND
               WORK1-DATA-DOWN = OUT1-DATA-DOWN THEN
              CONTINUE
            ELSE
              MOVE 1 TO RTN01
            END-IF
            EXIT.
       END PROGRAM 'EVALOPT'.
       END PROGRAM DFHEI1.